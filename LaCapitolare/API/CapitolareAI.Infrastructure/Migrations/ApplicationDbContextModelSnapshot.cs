// <auto-generated />
using System;
using CapitolareAI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapitolareAI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapitolareAI.Core.Entities.Donor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalBackground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "e.hughes@example.com",
                            EstimatedCapacity = 50000m,
                            FirstName = "Eleanor",
                            LastName = "Hughes",
                            Location = "Boston, MA",
                            ProfessionalBackground = "Professor of Medieval Literature"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "m.chen@example.com",
                            EstimatedCapacity = 200000m,
                            FirstName = "Michael",
                            LastName = "Chen",
                            Location = "San Francisco, CA",
                            ProfessionalBackground = "Tech Executive"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "s.lombardi@example.com",
                            EstimatedCapacity = 150000m,
                            FirstName = "Sophia",
                            LastName = "Lombardi",
                            Location = "New York, NY",
                            ProfessionalBackground = "Art Collector"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "r.johnson@example.com",
                            EstimatedCapacity = 100000m,
                            FirstName = "Robert",
                            LastName = "Johnson",
                            Location = "Chicago, IL",
                            ProfessionalBackground = "Pharmaceutical Executive"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "j.reed@example.com",
                            EstimatedCapacity = 30000m,
                            FirstName = "Julia",
                            LastName = "Reed",
                            Location = "Washington, DC",
                            ProfessionalBackground = "Religious Studies Professor"
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.DonorInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("StrengthScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.ToTable("DonorInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Medieval Literature",
                            DonorId = 1,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 2,
                            Category = "Preservation",
                            DonorId = 1,
                            StrengthScore = 7
                        },
                        new
                        {
                            Id = 3,
                            Category = "Italian Culture",
                            DonorId = 1,
                            StrengthScore = 8
                        },
                        new
                        {
                            Id = 4,
                            Category = "Digital Preservation",
                            DonorId = 2,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 5,
                            Category = "Ancient Science",
                            DonorId = 2,
                            StrengthScore = 8
                        },
                        new
                        {
                            Id = 6,
                            Category = "Technology History",
                            DonorId = 2,
                            StrengthScore = 7
                        },
                        new
                        {
                            Id = 7,
                            Category = "Italian Renaissance",
                            DonorId = 3,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 8,
                            Category = "Art History",
                            DonorId = 3,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 9,
                            Category = "Religious Art",
                            DonorId = 3,
                            StrengthScore = 6
                        },
                        new
                        {
                            Id = 10,
                            Category = "Medical History",
                            DonorId = 4,
                            StrengthScore = 8
                        },
                        new
                        {
                            Id = 11,
                            Category = "Ancient Science",
                            DonorId = 4,
                            StrengthScore = 7
                        },
                        new
                        {
                            Id = 12,
                            Category = "Rare Books",
                            DonorId = 4,
                            StrengthScore = 5
                        },
                        new
                        {
                            Id = 13,
                            Category = "Early Christianity",
                            DonorId = 5,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 14,
                            Category = "Biblical Studies",
                            DonorId = 5,
                            StrengthScore = 9
                        },
                        new
                        {
                            Id = 15,
                            Category = "Ancient Languages",
                            DonorId = 5,
                            StrengthScore = 7
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.DonorScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AffinityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CapacityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<decimal>("EngagementProbability")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PredictedDonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DonorId")
                        .IsUnique();

                    b.ToTable("DonorScores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AffinityScore = 8.5m,
                            CapacityScore = 7.2m,
                            DonorId = 1,
                            EngagementProbability = 0.75m,
                            PredictedDonationAmount = 15000m
                        },
                        new
                        {
                            Id = 2,
                            AffinityScore = 7.8m,
                            CapacityScore = 9.0m,
                            DonorId = 2,
                            EngagementProbability = 0.65m,
                            PredictedDonationAmount = 25000m
                        },
                        new
                        {
                            Id = 3,
                            AffinityScore = 8.2m,
                            CapacityScore = 8.7m,
                            DonorId = 3,
                            EngagementProbability = 0.82m,
                            PredictedDonationAmount = 30000m
                        },
                        new
                        {
                            Id = 4,
                            AffinityScore = 7.1m,
                            CapacityScore = 8.3m,
                            DonorId = 4,
                            EngagementProbability = 0.60m,
                            PredictedDonationAmount = 18000m
                        },
                        new
                        {
                            Id = 5,
                            AffinityScore = 8.9m,
                            CapacityScore = 6.1m,
                            DonorId = 5,
                            EngagementProbability = 0.88m,
                            PredictedDonationAmount = 12000m
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.Manuscript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreservationCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manuscripts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Condition = "Fragile",
                            Description = "One of the oldest surviving biblical manuscripts, contains rare passages of early Latin translations.",
                            Period = "6th Century",
                            PreservationCost = 75000m,
                            Title = "Codex Veronensis"
                        },
                        new
                        {
                            Id = 2,
                            Condition = "Poor",
                            Description = "Contains previously unknown works of Archimedes, overwritten by later religious texts.",
                            Period = "10th Century",
                            PreservationCost = 120000m,
                            Title = "Archimedes Palimpsest"
                        },
                        new
                        {
                            Id = 3,
                            Condition = "Good",
                            Description = "Rare early manuscript of Dante's masterpiece with unique illustrations.",
                            Period = "14th Century",
                            PreservationCost = 45000m,
                            Title = "Dante's Divine Comedy First Edition"
                        },
                        new
                        {
                            Id = 4,
                            Condition = "Fair",
                            Description = "Lavishly illustrated Flemish manuscript with exceptional detail and artistry.",
                            Period = "15th Century",
                            PreservationCost = 95000m,
                            Title = "Breviarium Grimani"
                        },
                        new
                        {
                            Id = 5,
                            Condition = "Poor",
                            Description = "Rare medical treatise combining Greek, Arabic and early Italian medical knowledge.",
                            Period = "12th Century",
                            PreservationCost = 85000m,
                            Title = "Verona Medical Codex"
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptAffinity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AffinityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DonorScoreId")
                        .HasColumnType("int");

                    b.Property<int>("ManuscriptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorScoreId");

                    b.HasIndex("ManuscriptId");

                    b.ToTable("ManuscriptAffinities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AffinityScore = 9.1m,
                            DonorScoreId = 1,
                            ManuscriptId = 3
                        },
                        new
                        {
                            Id = 2,
                            AffinityScore = 7.8m,
                            DonorScoreId = 1,
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 3,
                            AffinityScore = 6.5m,
                            DonorScoreId = 1,
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 4,
                            AffinityScore = 8.9m,
                            DonorScoreId = 2,
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 5,
                            AffinityScore = 7.2m,
                            DonorScoreId = 2,
                            ManuscriptId = 5
                        },
                        new
                        {
                            Id = 6,
                            AffinityScore = 4.3m,
                            DonorScoreId = 2,
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 7,
                            AffinityScore = 9.3m,
                            DonorScoreId = 3,
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 8,
                            AffinityScore = 8.7m,
                            DonorScoreId = 3,
                            ManuscriptId = 3
                        },
                        new
                        {
                            Id = 9,
                            AffinityScore = 3.5m,
                            DonorScoreId = 3,
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 10,
                            AffinityScore = 9.0m,
                            DonorScoreId = 4,
                            ManuscriptId = 5
                        },
                        new
                        {
                            Id = 11,
                            AffinityScore = 6.8m,
                            DonorScoreId = 4,
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 12,
                            AffinityScore = 4.1m,
                            DonorScoreId = 4,
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 13,
                            AffinityScore = 9.5m,
                            DonorScoreId = 5,
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 14,
                            AffinityScore = 7.2m,
                            DonorScoreId = 5,
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 15,
                            AffinityScore = 4.8m,
                            DonorScoreId = 5,
                            ManuscriptId = 3
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManuscriptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManuscriptId");

                    b.ToTable("ManuscriptCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Biblical",
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Latin",
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Early Christianity",
                            ManuscriptId = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = "Mathematics",
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 5,
                            Category = "Science",
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 6,
                            Category = "Ancient Greece",
                            ManuscriptId = 2
                        },
                        new
                        {
                            Id = 7,
                            Category = "Literature",
                            ManuscriptId = 3
                        },
                        new
                        {
                            Id = 8,
                            Category = "Italian Renaissance",
                            ManuscriptId = 3
                        },
                        new
                        {
                            Id = 9,
                            Category = "Poetry",
                            ManuscriptId = 3
                        },
                        new
                        {
                            Id = 10,
                            Category = "Art",
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 11,
                            Category = "Religious",
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 12,
                            Category = "Illuminated Manuscript",
                            ManuscriptId = 4
                        },
                        new
                        {
                            Id = 13,
                            Category = "Medicine",
                            ManuscriptId = 5
                        },
                        new
                        {
                            Id = 14,
                            Category = "Science",
                            ManuscriptId = 5
                        },
                        new
                        {
                            Id = 15,
                            Category = "Medieval",
                            ManuscriptId = 5
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptStoryAngle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManuscriptId")
                        .HasColumnType("int");

                    b.Property<string>("StoryAngle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManuscriptId");

                    b.ToTable("ManuscriptStoryAngles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManuscriptId = 1,
                            StoryAngle = "Biblical Heritage"
                        },
                        new
                        {
                            Id = 2,
                            ManuscriptId = 1,
                            StoryAngle = "Earliest Christian Writings"
                        },
                        new
                        {
                            Id = 3,
                            ManuscriptId = 1,
                            StoryAngle = "Linguistic Evolution"
                        },
                        new
                        {
                            Id = 4,
                            ManuscriptId = 2,
                            StoryAngle = "Scientific Discovery"
                        },
                        new
                        {
                            Id = 5,
                            ManuscriptId = 2,
                            StoryAngle = "Preservation Technology"
                        },
                        new
                        {
                            Id = 6,
                            ManuscriptId = 2,
                            StoryAngle = "Lost Knowledge"
                        },
                        new
                        {
                            Id = 7,
                            ManuscriptId = 3,
                            StoryAngle = "Italian Cultural Heritage"
                        },
                        new
                        {
                            Id = 8,
                            ManuscriptId = 3,
                            StoryAngle = "Literary Milestone"
                        },
                        new
                        {
                            Id = 9,
                            ManuscriptId = 3,
                            StoryAngle = "Artistic Collaboration"
                        },
                        new
                        {
                            Id = 10,
                            ManuscriptId = 4,
                            StoryAngle = "Artistic Excellence"
                        },
                        new
                        {
                            Id = 11,
                            ManuscriptId = 4,
                            StoryAngle = "Religious Devotion"
                        },
                        new
                        {
                            Id = 12,
                            ManuscriptId = 4,
                            StoryAngle = "Cultural Exchange"
                        },
                        new
                        {
                            Id = 13,
                            ManuscriptId = 5,
                            StoryAngle = "Medical History"
                        },
                        new
                        {
                            Id = 14,
                            ManuscriptId = 5,
                            StoryAngle = "Cross-Cultural Knowledge"
                        },
                        new
                        {
                            Id = 15,
                            ManuscriptId = 5,
                            StoryAngle = "Scientific Preservation"
                        });
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.DonorInterest", b =>
                {
                    b.HasOne("CapitolareAI.Core.Entities.Donor", "Donor")
                        .WithMany("Interests")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.DonorScore", b =>
                {
                    b.HasOne("CapitolareAI.Core.Entities.Donor", "Donor")
                        .WithOne("Score")
                        .HasForeignKey("CapitolareAI.Core.Entities.DonorScore", "DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptAffinity", b =>
                {
                    b.HasOne("CapitolareAI.Core.Entities.DonorScore", "DonorScore")
                        .WithMany("ManuscriptAffinities")
                        .HasForeignKey("DonorScoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapitolareAI.Core.Entities.Manuscript", "Manuscript")
                        .WithMany("DonorAffinities")
                        .HasForeignKey("ManuscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonorScore");

                    b.Navigation("Manuscript");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptCategory", b =>
                {
                    b.HasOne("CapitolareAI.Core.Entities.Manuscript", "Manuscript")
                        .WithMany("Categories")
                        .HasForeignKey("ManuscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manuscript");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.ManuscriptStoryAngle", b =>
                {
                    b.HasOne("CapitolareAI.Core.Entities.Manuscript", "Manuscript")
                        .WithMany("StoryAngles")
                        .HasForeignKey("ManuscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manuscript");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.Donor", b =>
                {
                    b.Navigation("Interests");

                    b.Navigation("Score")
                        .IsRequired();
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.DonorScore", b =>
                {
                    b.Navigation("ManuscriptAffinities");
                });

            modelBuilder.Entity("CapitolareAI.Core.Entities.Manuscript", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("DonorAffinities");

                    b.Navigation("StoryAngles");
                });
#pragma warning restore 612, 618
        }
    }
}
